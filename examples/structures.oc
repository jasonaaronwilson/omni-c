struct empty_struct_t {};

struct simple_struct_t {
  uint64_t number_field;
};

struct simple_struct_with_pointer_t {
  uint64_t* number_field;
};

struct simple_bit_field_t {
  uint64_t number_field : 3;
};

struct signed_fields_t {
  short short_field;
  short int short_int_field;
  signed short signed_short_field;
  signed short int signed_short_int_field;
  
  int int_field;
  signed int signed_int_field;
  signed signed_field;
  
  long long_field;
  long int long_int_field;
  signed long signed_long_field;
  signed long int signed_long_int_field;
};

struct unsigned_fields_t {
  unsigned short int unsigned_short_int_field;
  unsigned int unsigned_int_field;
  unsigned long int unsigned_long_int_field;
};

struct char_fields_t {
  char ch;
  signed char signed_char_field;
  unsigned char unsigned_char_field;
};

struct floating_point_fields_t {
  float float_field;
  double double_field;
  // This is a non ISO C type that is a synonym for double.
  long float long_float;
  // Can be a normal 64 bit double, 80 bits (old x86 code), two
  // doubles somehow combined, and 128-bit "quadruple precision"
  // numbers.
  long double long_double_field;
};

struct signed_pointer_fields_t {
  short* short_field;
  short int* short_int_field;
  signed short* signed_short_field;
  signed short int* signed_short_int_field;
  
  int* int_field;
  signed int* signed_int_field;
  signed* signed_field;
  
  long* long_field;
  long int* long_int_field;
  signed long* signed_long_field;
  signed long int* signed_long_int_field;
};

struct unsigned_pointer_fields_t {
  unsigned short int* unsigned_short_int_field;
  unsigned int* unsigned_int_field;
  unsigned long int* unsigned_long_int_field;
};

struct char_pointer_fields_t {
  char* ch;
  signed char* signed_char_field;
  unsigned char* unsigned_char_field;
};

struct floating_point_pointer_fields_t {
  float* float_field;
  double* double_field;
  // This is a non ISO C type that is a synonym for double.
  long float* long_float;
  // Can be a normal 64 bit double, 80 bits (old x86 code), two
  // doubles somehow combined, and 128-bit "quadruple precision"
  // numbers.
  long double* long_double_field;
};

struct c99_fields_t {
  _Bool boolean_field;
  _Complex complex_field;
  _Imaginary imaginary_field;
  long long extend_integer_field;
  // TODO(jawilson): VLA
  // TODO(jawilson): designated initializers?
};

struct c11_fields_t {
  // TODO(jawilson): _Atomic
  // TODO(jawilson): _Generic
  // TODO(jawilson): _Alignas
  // TODO(jawilson): _Alignof
};

struct c23_fields_t {
  // TODO(jawilson): _DecimalN
  // TODO(jawilson): _BitInt(N)
};

struct array_fields_t {
  int[] unsized_int_array;
  int[0] zero_length_array;
  int[5] fixed_size_array;
  // TODO(jawilson): make sure negative integers are illegal.
};

struct unseen_fields_t {
  some_unseen_type_t unseed_type_field;
};
