#include <stdio.h>  // Required for input/output functions

// Define a custom data type (typedef) for point coordinates
typedef struct {
  int x;
  float y;
} Point;

struct foo_struct {
  int x : 2;
  int y : 1;
};

void greet(char* foo) {
  fprintf(stdout, "%s", foo);
}

int main() {

  // Declare variables of different types
  int age = 30;
  char initial = 'B';
  float pi = 3.14159;

  // Array of characters (string)
  char name[] = "Alice";

  // Pointer to an integer
  int num = 10;
  int *ptr = &num;  // ptr stores the memory address of num

  // Structure variable to store point coordinates
  Point p1 = {2, 5.3f}; // Initialize using a designated initializer list

  // Union (not used here, but demonstrates the concept)
  union Data {
    int value;
    float fval;
  };

  // Static variable (only accessible within main)
  static int count = 0;  // Initialized to 0 only once

  // Function to demonstrate function calls
  void greet(char *name) {
    printf("Hello, %s!\n", name);
  }

  // Control flow statements
  if (age > 25) {
    printf("You are eligible.\n");
  } else {
    printf("Not eligible yet.\n");
  }

  for (int i = 0; i < 3; i++) {
    printf("Iteration: %d\n", i);
  }

  while (count < 2) {
    printf("Count: %d\n", count);
    count++;
  }

  // Bitwise operation (example: check if least significant bit is set)
  if (num & 1) {
    printf("%d is odd.\n", num);
  } else {
    printf("%d is even.\n", num);
  }

  // Function call
  greet(name);

  // Accessing elements of an array and structure
  printf("Name: %s\n", name);
  printf("Point coordinates: (%d, %.2f)\n", p1.x, p1.y);

  // Accessing value through pointer
  printf("Value pointed to by ptr: %d\n", *ptr);

int grade = 85;
char letterGrade;

if (grade >= 90) {
  letterGrade = 'A';
} else if (grade >= 80) {
  letterGrade = 'B';
} else if (grade >= 70) {
  letterGrade = 'C';
} else {
  letterGrade = 'F';
}

printf("Your grade is %d, which translates to a letter grade of %c.\n", grade, letterGrade);

int age = 20;
bool canVote = (age >= 18) ? true : false;

printf((canVote) ? "You are eligible to vote.\n" : "You are not eligible to vote yet.\n");

char choice = 'B';

switch (choice) {
  case 'A':
    printf("You chose option A.\n");
    break;
  case 'B':
    printf("You chose option B.\n");
    break;
  case 'C':
    printf("You chose option C.\n");
    break;
  default:
    printf("Invalid choice.\n");
}

int sum = 0;
for (int i = 1; i <= 5; i++) {
  sum += i;
}

printf("The sum of the first 5 numbers is %d.\n", sum);

int num = 10;
while (num > 0) {
  printf("%d ", num);
  num--;
}

printf("\n");  // Print a newline after the loop finishes

int count = 0;
do {
  printf("Count: %d\n", count);
  count++;
} while (count < 3);

  return 0;
}
